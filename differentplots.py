# -*- coding: utf-8 -*-
"""DifferentPlots.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w7OOtDuew02Ny4qd9qydwdXn1v30Ptwa

Data Visualisation by Bar Chart,Pie Chart,Histogram,Heatmap,ScatterPlot,Box Plot
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

filepath="https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-DA0101EN-Coursera/laptop_pricing_dataset_mod2.csv"
df = pd.read_csv(filepath, header=0)

df.head()

"""**Bar Chart**"""

df.columns

plt.figure(figsize=(8, 6))

# Use the DataFrame columns to create the bar chart
plt.bar(df["Category"], df["Price"], color='skyblue')

# Adding labels and title
plt.xlabel('Categories')
plt.ylabel('Price')
plt.title('Bar Chart: Category vs Price')
# Rotate x-axis labels for better readability if needed
#plt.tight_layout()
plt.show()

"""**Pie Chart**"""

# Create a pie chart
plt.figure(figsize=(6,8))
count=df["Manufacturer"].value_counts()


plt.pie(count,labels=count.index,autopct='%1.1f%%',startangle=140,radius=1)
plt.title('Manufacturer Distribution')

# Equal aspect ratio ensures that pie is drawn as a circle
plt.axis('equal')
plt.show()

"""**Histogram**"""

plt.figure(figsize=(8, 6))
plt.hist(df["Price"], bins=30, color='skyblue', edgecolor='black')  # Adjust the number of bins as needed
plt.xlabel('Price')
plt.ylabel('Frequency')
plt.title('Histogram of Price')

# Show plot
plt.grid(True)
plt.show()

"""**HEATMAP**"""

correlation_matrix = df.corr()

# Create a heatmap
plt.figure(figsize=(8, 6))
heatmap = plt.imshow(correlation_matrix, cmap='viridis', interpolation='nearest')
#sns.heatmap(df.corr(),annot= True)
plt.colorbar(heatmap)
plt.title('Heatmap of Correlation Between Variables')
plt.show()

"""**Scatter PLOT**"""

plt.figure(figsize=(8, 6))

plt.scatter(df["RAM_GB"],df["Price"], color='blue', alpha=0.7)  # 'alpha' controls transparency of points
plt.xlabel('RAM')
plt.ylabel('Price')
plt.title('Scatter Plot Example')
plt.grid(True)  # Show gridlines
plt.show()

"""**BOX PLOT**"""

import seaborn as sns
plt.figure(figsize=(8, 6))
sns.boxplot(x='Manufacturer', y='Price', data=df, palette='Set3')
plt.xlabel('Manufacturer')
plt.ylabel('Price')

plt.title('Box Plot Example')

plt.show()

